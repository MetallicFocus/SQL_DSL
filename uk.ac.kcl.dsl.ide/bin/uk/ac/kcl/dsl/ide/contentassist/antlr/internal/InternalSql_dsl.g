/*
 * generated by Xtext 2.20.0
 */
grammar InternalSql_dsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.dsl.services.Sql_dslGrammarAccess;

}
@parser::members {
	private Sql_dslGrammarAccess grammarAccess;

	public void setGrammarAccess(Sql_dslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getStatementsAssignment()); }
		(rule__Model__StatementsAssignment)*
		{ after(grammarAccess.getModelAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectStatement
entryRuleSelectStatement
:
{ before(grammarAccess.getSelectStatementRule()); }
	 ruleSelectStatement
{ after(grammarAccess.getSelectStatementRule()); } 
	 EOF 
;

// Rule SelectStatement
ruleSelectStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectStatementAccess().getGroup()); }
		(rule__SelectStatement__Group__0)
		{ after(grammarAccess.getSelectStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFromAndWhereClauses
entryRuleFromAndWhereClauses
:
{ before(grammarAccess.getFromAndWhereClausesRule()); }
	 ruleFromAndWhereClauses
{ after(grammarAccess.getFromAndWhereClausesRule()); } 
	 EOF 
;

// Rule FromAndWhereClauses
ruleFromAndWhereClauses 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromAndWhereClausesAccess().getGroup()); }
		(rule__FromAndWhereClauses__Group__0)
		{ after(grammarAccess.getFromAndWhereClausesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhereDec
entryRuleWhereDec
:
{ before(grammarAccess.getWhereDecRule()); }
	 ruleWhereDec
{ after(grammarAccess.getWhereDecRule()); } 
	 EOF 
;

// Rule WhereDec
ruleWhereDec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhereDecAccess().getGroup()); }
		(rule__WhereDec__Group__0)
		{ after(grammarAccess.getWhereDecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDatabaseDeclarationStatement
entryRuleDatabaseDeclarationStatement
:
{ before(grammarAccess.getDatabaseDeclarationStatementRule()); }
	 ruleDatabaseDeclarationStatement
{ after(grammarAccess.getDatabaseDeclarationStatementRule()); } 
	 EOF 
;

// Rule DatabaseDeclarationStatement
ruleDatabaseDeclarationStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatabaseDeclarationStatementAccess().getGroup()); }
		(rule__DatabaseDeclarationStatement__Group__0)
		{ after(grammarAccess.getDatabaseDeclarationStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateTableStatement
entryRuleCreateTableStatement
:
{ before(grammarAccess.getCreateTableStatementRule()); }
	 ruleCreateTableStatement
{ after(grammarAccess.getCreateTableStatementRule()); } 
	 EOF 
;

// Rule CreateTableStatement
ruleCreateTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getCreateTableStatementAccess().getTablesAssignment()); }
			(rule__CreateTableStatement__TablesAssignment)
			{ after(grammarAccess.getCreateTableStatementAccess().getTablesAssignment()); }
		)
		(
			{ before(grammarAccess.getCreateTableStatementAccess().getTablesAssignment()); }
			(rule__CreateTableStatement__TablesAssignment)*
			{ after(grammarAccess.getCreateTableStatementAccess().getTablesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableDeclaration
entryRuleTableDeclaration
:
{ before(grammarAccess.getTableDeclarationRule()); }
	 ruleTableDeclaration
{ after(grammarAccess.getTableDeclarationRule()); } 
	 EOF 
;

// Rule TableDeclaration
ruleTableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableDeclarationAccess().getGroup()); }
		(rule__TableDeclaration__Group__0)
		{ after(grammarAccess.getTableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletableName
entryRuletableName
:
{ before(grammarAccess.getTableNameRule()); }
	 ruletableName
{ after(grammarAccess.getTableNameRule()); } 
	 EOF 
;

// Rule tableName
ruletableName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableNameAccess().getNameAssignment()); }
		(rule__TableName__NameAssignment)
		{ after(grammarAccess.getTableNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnDeclaration
entryRuleColumnDeclaration
:
{ before(grammarAccess.getColumnDeclarationRule()); }
	 ruleColumnDeclaration
{ after(grammarAccess.getColumnDeclarationRule()); } 
	 EOF 
;

// Rule ColumnDeclaration
ruleColumnDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnDeclarationAccess().getGroup()); }
		(rule__ColumnDeclaration__Group__0)
		{ after(grammarAccess.getColumnDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryKey
entryRulePrimaryKey
:
{ before(grammarAccess.getPrimaryKeyRule()); }
	 rulePrimaryKey
{ after(grammarAccess.getPrimaryKeyRule()); } 
	 EOF 
;

// Rule PrimaryKey
rulePrimaryKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getGroup()); }
		(rule__PrimaryKey__Group__0)
		{ after(grammarAccess.getPrimaryKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeignKey
entryRuleForeignKey
:
{ before(grammarAccess.getForeignKeyRule()); }
	 ruleForeignKey
{ after(grammarAccess.getForeignKeyRule()); } 
	 EOF 
;

// Rule ForeignKey
ruleForeignKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeignKeyAccess().getGroup()); }
		(rule__ForeignKey__Group__0)
		{ after(grammarAccess.getForeignKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDropTableStatement
entryRuleDropTableStatement
:
{ before(grammarAccess.getDropTableStatementRule()); }
	 ruleDropTableStatement
{ after(grammarAccess.getDropTableStatementRule()); } 
	 EOF 
;

// Rule DropTableStatement
ruleDropTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropTableStatementAccess().getGroup()); }
		(rule__DropTableStatement__Group__0)
		{ after(grammarAccess.getDropTableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTruncateTableStatement
entryRuleTruncateTableStatement
:
{ before(grammarAccess.getTruncateTableStatementRule()); }
	 ruleTruncateTableStatement
{ after(grammarAccess.getTruncateTableStatementRule()); } 
	 EOF 
;

// Rule TruncateTableStatement
ruleTruncateTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTruncateTableStatementAccess().getGroup()); }
		(rule__TruncateTableStatement__Group__0)
		{ after(grammarAccess.getTruncateTableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteTableStatement
entryRuleDeleteTableStatement
:
{ before(grammarAccess.getDeleteTableStatementRule()); }
	 ruleDeleteTableStatement
{ after(grammarAccess.getDeleteTableStatementRule()); } 
	 EOF 
;

// Rule DeleteTableStatement
ruleDeleteTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteTableStatementAccess().getGroup()); }
		(rule__DeleteTableStatement__Group__0)
		{ after(grammarAccess.getDeleteTableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateTableStatement
entryRuleUpdateTableStatement
:
{ before(grammarAccess.getUpdateTableStatementRule()); }
	 ruleUpdateTableStatement
{ after(grammarAccess.getUpdateTableStatementRule()); } 
	 EOF 
;

// Rule UpdateTableStatement
ruleUpdateTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getGroup()); }
		(rule__UpdateTableStatement__Group__0)
		{ after(grammarAccess.getUpdateTableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetClause
entryRuleSetClause
:
{ before(grammarAccess.getSetClauseRule()); }
	 ruleSetClause
{ after(grammarAccess.getSetClauseRule()); } 
	 EOF 
;

// Rule SetClause
ruleSetClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetClauseAccess().getGroup()); }
		(rule__SetClause__Group__0)
		{ after(grammarAccess.getSetClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlterTableStatement
entryRuleAlterTableStatement
:
{ before(grammarAccess.getAlterTableStatementRule()); }
	 ruleAlterTableStatement
{ after(grammarAccess.getAlterTableStatementRule()); } 
	 EOF 
;

// Rule AlterTableStatement
ruleAlterTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlterTableStatementAccess().getGroup()); }
		(rule__AlterTableStatement__Group__0)
		{ after(grammarAccess.getAlterTableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlterDropStatement
entryRuleAlterDropStatement
:
{ before(grammarAccess.getAlterDropStatementRule()); }
	 ruleAlterDropStatement
{ after(grammarAccess.getAlterDropStatementRule()); } 
	 EOF 
;

// Rule AlterDropStatement
ruleAlterDropStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlterDropStatementAccess().getGroup()); }
		(rule__AlterDropStatement__Group__0)
		{ after(grammarAccess.getAlterDropStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlterAddStatement
entryRuleAlterAddStatement
:
{ before(grammarAccess.getAlterAddStatementRule()); }
	 ruleAlterAddStatement
{ after(grammarAccess.getAlterAddStatementRule()); } 
	 EOF 
;

// Rule AlterAddStatement
ruleAlterAddStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlterAddStatementAccess().getGroup()); }
		(rule__AlterAddStatement__Group__0)
		{ after(grammarAccess.getAlterAddStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlterUpdateStatement
entryRuleAlterUpdateStatement
:
{ before(grammarAccess.getAlterUpdateStatementRule()); }
	 ruleAlterUpdateStatement
{ after(grammarAccess.getAlterUpdateStatementRule()); } 
	 EOF 
;

// Rule AlterUpdateStatement
ruleAlterUpdateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlterUpdateStatementAccess().getGroup()); }
		(rule__AlterUpdateStatement__Group__0)
		{ after(grammarAccess.getAlterUpdateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclarationStatement
entryRuleVariableDeclarationStatement
:
{ before(grammarAccess.getVariableDeclarationStatementRule()); }
	 ruleVariableDeclarationStatement
{ after(grammarAccess.getVariableDeclarationStatementRule()); } 
	 EOF 
;

// Rule VariableDeclarationStatement
ruleVariableDeclarationStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationStatementAccess().getGroup()); }
		(rule__VariableDeclarationStatement__Group__0)
		{ after(grammarAccess.getVariableDeclarationStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREAL
entryRuleREAL
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getREALRule()); }
	 ruleREAL
{ after(grammarAccess.getREALRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREALAccess().getGroup()); }
		(rule__REAL__Group__0)
		{ after(grammarAccess.getREALAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleFunctions
entryRuleFunctions
:
{ before(grammarAccess.getFunctionsRule()); }
	 ruleFunctions
{ after(grammarAccess.getFunctionsRule()); } 
	 EOF 
;

// Rule Functions
ruleFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionsAccess().getAlternatives()); }
		(rule__Functions__Alternatives)
		{ after(grammarAccess.getFunctionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCountFunction
entryRuleCountFunction
:
{ before(grammarAccess.getCountFunctionRule()); }
	 ruleCountFunction
{ after(grammarAccess.getCountFunctionRule()); } 
	 EOF 
;

// Rule CountFunction
ruleCountFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCountFunctionAccess().getGroup()); }
		(rule__CountFunction__Group__0)
		{ after(grammarAccess.getCountFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAvgFunction
entryRuleAvgFunction
:
{ before(grammarAccess.getAvgFunctionRule()); }
	 ruleAvgFunction
{ after(grammarAccess.getAvgFunctionRule()); } 
	 EOF 
;

// Rule AvgFunction
ruleAvgFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAvgFunctionAccess().getGroup()); }
		(rule__AvgFunction__Group__0)
		{ after(grammarAccess.getAvgFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSumFunction
entryRuleSumFunction
:
{ before(grammarAccess.getSumFunctionRule()); }
	 ruleSumFunction
{ after(grammarAccess.getSumFunctionRule()); } 
	 EOF 
;

// Rule SumFunction
ruleSumFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumFunctionAccess().getGroup()); }
		(rule__SumFunction__Group__0)
		{ after(grammarAccess.getSumFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinFunction
entryRuleMinFunction
:
{ before(grammarAccess.getMinFunctionRule()); }
	 ruleMinFunction
{ after(grammarAccess.getMinFunctionRule()); } 
	 EOF 
;

// Rule MinFunction
ruleMinFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinFunctionAccess().getGroup()); }
		(rule__MinFunction__Group__0)
		{ after(grammarAccess.getMinFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaxFunction
entryRuleMaxFunction
:
{ before(grammarAccess.getMaxFunctionRule()); }
	 ruleMaxFunction
{ after(grammarAccess.getMaxFunctionRule()); } 
	 EOF 
;

// Rule MaxFunction
ruleMaxFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxFunctionAccess().getGroup()); }
		(rule__MaxFunction__Group__0)
		{ after(grammarAccess.getMaxFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataStructureType
ruleDataStructureType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getAlternatives()); }
		(rule__DataStructureType__Alternatives)
		{ after(grammarAccess.getDataStructureTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDatabaseDeclarationStatementParserRuleCall_0()); }
		ruleDatabaseDeclarationStatement
		{ after(grammarAccess.getStatementAccess().getDatabaseDeclarationStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCreateTableStatementParserRuleCall_1()); }
		ruleCreateTableStatement
		{ after(grammarAccess.getStatementAccess().getCreateTableStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDropTableStatementParserRuleCall_2()); }
		ruleDropTableStatement
		{ after(grammarAccess.getStatementAccess().getDropTableStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTruncateTableStatementParserRuleCall_3()); }
		ruleTruncateTableStatement
		{ after(grammarAccess.getStatementAccess().getTruncateTableStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAlterTableStatementParserRuleCall_4()); }
		ruleAlterTableStatement
		{ after(grammarAccess.getStatementAccess().getAlterTableStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getVariableDeclarationStatementParserRuleCall_5()); }
		ruleVariableDeclarationStatement
		{ after(grammarAccess.getStatementAccess().getVariableDeclarationStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectStatementParserRuleCall_6()); }
		ruleSelectStatement
		{ after(grammarAccess.getStatementAccess().getSelectStatementParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteTableStatementParserRuleCall_7()); }
		ruleDeleteTableStatement
		{ after(grammarAccess.getStatementAccess().getDeleteTableStatementParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getUpdateTableStatementParserRuleCall_8()); }
		ruleUpdateTableStatement
		{ after(grammarAccess.getStatementAccess().getUpdateTableStatementParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFunctionsParserRuleCall_9()); }
		ruleFunctions
		{ after(grammarAccess.getStatementAccess().getFunctionsParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getAsteriskKeyword_1_0()); }
		'*'
		{ after(grammarAccess.getSelectStatementAccess().getAsteriskKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectStatementAccess().getGroup_1_1()); }
		(rule__SelectStatement__Group_1_1__0)*
		{ after(grammarAccess.getSelectStatementAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Alternatives_2_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAndWhereClausesAccess().getANDKeyword_2_2_0_0()); }
		'AND'
		{ after(grammarAccess.getFromAndWhereClausesAccess().getANDKeyword_2_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFromAndWhereClausesAccess().getORKeyword_2_2_0_1()); }
		'OR'
		{ after(grammarAccess.getFromAndWhereClausesAccess().getORKeyword_2_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereDecAccess().getEqualsSignKeyword_1_0()); }
		'='
		{ after(grammarAccess.getWhereDecAccess().getEqualsSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getLessThanSignKeyword_1_1()); }
		'<'
		{ after(grammarAccess.getWhereDecAccess().getLessThanSignKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getLessThanSignEqualsSignKeyword_1_2()); }
		'<='
		{ after(grammarAccess.getWhereDecAccess().getLessThanSignEqualsSignKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getGreaterThanSignKeyword_1_3()); }
		'>'
		{ after(grammarAccess.getWhereDecAccess().getGreaterThanSignKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getGreaterThanSignEqualsSignKeyword_1_4()); }
		'>='
		{ after(grammarAccess.getWhereDecAccess().getGreaterThanSignEqualsSignKeyword_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getExclamationMarkEqualsSignKeyword_1_5()); }
		'!='
		{ after(grammarAccess.getWhereDecAccess().getExclamationMarkEqualsSignKeyword_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getLIKEKeyword_1_6()); }
		'LIKE'
		{ after(grammarAccess.getWhereDecAccess().getLIKEKeyword_1_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereDecAccess().getGroup_2_0()); }
		(rule__WhereDec__Group_2_0__0)
		{ after(grammarAccess.getWhereDecAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getColumnAssignment_2_1()); }
		(rule__WhereDec__ColumnAssignment_2_1)
		{ after(grammarAccess.getWhereDecAccess().getColumnAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getWhereDecAccess().getValAssignment_2_2()); }
		(rule__WhereDec__ValAssignment_2_2)
		{ after(grammarAccess.getWhereDecAccess().getValAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__AttributesAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesColumnDeclarationParserRuleCall_4_0_0()); }
		ruleColumnDeclaration
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesColumnDeclarationParserRuleCall_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesPrimaryKeyParserRuleCall_4_0_1()); }
		rulePrimaryKey
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesPrimaryKeyParserRuleCall_4_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesForeignKeyParserRuleCall_4_0_2()); }
		ruleForeignKey
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesForeignKeyParserRuleCall_4_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__AttributesAlternatives_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesColumnDeclarationParserRuleCall_5_1_0_0()); }
		ruleColumnDeclaration
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesColumnDeclarationParserRuleCall_5_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesPrimaryKeyParserRuleCall_5_1_0_1()); }
		rulePrimaryKey
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesPrimaryKeyParserRuleCall_5_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesForeignKeyParserRuleCall_5_1_0_2()); }
		ruleForeignKey
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesForeignKeyParserRuleCall_5_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Alternatives_5_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getANDKeyword_5_2_0_0()); }
		'AND'
		{ after(grammarAccess.getUpdateTableStatementAccess().getANDKeyword_5_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getORKeyword_5_2_0_1()); }
		'OR'
		{ after(grammarAccess.getUpdateTableStatementAccess().getORKeyword_5_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetClauseAccess().getGroup_2_0()); }
		(rule__SetClause__Group_2_0__0)
		{ after(grammarAccess.getSetClauseAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetClauseAccess().getValAssignment_2_1()); }
		(rule__SetClause__ValAssignment_2_1)
		{ after(grammarAccess.getSetClauseAccess().getValAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__AddDropUpdateAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlterDropStatementParserRuleCall_3_0_0()); }
		ruleAlterDropStatement
		{ after(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlterDropStatementParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlterAddStatementParserRuleCall_3_0_1()); }
		ruleAlterAddStatement
		{ after(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlterAddStatementParserRuleCall_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlterUpdateStatementParserRuleCall_3_0_2()); }
		ruleAlterUpdateStatement
		{ after(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlterUpdateStatementParserRuleCall_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionsAccess().getCountFunctionParserRuleCall_0()); }
		ruleCountFunction
		{ after(grammarAccess.getFunctionsAccess().getCountFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionsAccess().getAvgFunctionParserRuleCall_1()); }
		ruleAvgFunction
		{ after(grammarAccess.getFunctionsAccess().getAvgFunctionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionsAccess().getSumFunctionParserRuleCall_2()); }
		ruleSumFunction
		{ after(grammarAccess.getFunctionsAccess().getSumFunctionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionsAccess().getMinFunctionParserRuleCall_3()); }
		ruleMinFunction
		{ after(grammarAccess.getFunctionsAccess().getMinFunctionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionsAccess().getMaxFunctionParserRuleCall_4()); }
		ruleMaxFunction
		{ after(grammarAccess.getFunctionsAccess().getMaxFunctionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataStructureType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getVARCHAREnumLiteralDeclaration_0()); }
		('varchar')
		{ after(grammarAccess.getDataStructureTypeAccess().getVARCHAREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getCHAREnumLiteralDeclaration_1()); }
		('char')
		{ after(grammarAccess.getDataStructureTypeAccess().getCHAREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getDATEEnumLiteralDeclaration_2()); }
		('date')
		{ after(grammarAccess.getDataStructureTypeAccess().getDATEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getINTEnumLiteralDeclaration_3()); }
		('int')
		{ after(grammarAccess.getDataStructureTypeAccess().getINTEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
		('float')
		{ after(grammarAccess.getDataStructureTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getTIMEEnumLiteralDeclaration_5()); }
		('time')
		{ after(grammarAccess.getDataStructureTypeAccess().getTIMEEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getDataStructureTypeAccess().getTEXTEnumLiteralDeclaration_6()); }
		('text')
		{ after(grammarAccess.getDataStructureTypeAccess().getTEXTEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__0__Impl
	rule__SelectStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getSELECTKeyword_0()); }
	'SELECT'
	{ after(grammarAccess.getSelectStatementAccess().getSELECTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__1__Impl
	rule__SelectStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getAlternatives_1()); }
	(rule__SelectStatement__Alternatives_1)
	{ after(grammarAccess.getSelectStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getXAssignment_2()); }
	(rule__SelectStatement__XAssignment_2)
	{ after(grammarAccess.getSelectStatementAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_1_1__0__Impl
	rule__SelectStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getColumnAssignment_1_1_0()); }
	(rule__SelectStatement__ColumnAssignment_1_1_0)
	{ after(grammarAccess.getSelectStatementAccess().getColumnAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_1_1_1()); }
	(rule__SelectStatement__Group_1_1_1__0)*
	{ after(grammarAccess.getSelectStatementAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_1_1_1__0__Impl
	rule__SelectStatement__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getCommaKeyword_1_1_1_0()); }
	','
	{ after(grammarAccess.getSelectStatementAccess().getCommaKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getColumnAssignment_1_1_1_1()); }
	(rule__SelectStatement__ColumnAssignment_1_1_1_1)
	{ after(grammarAccess.getSelectStatementAccess().getColumnAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FromAndWhereClauses__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group__0__Impl
	rule__FromAndWhereClauses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getFROMKeyword_0()); }
	'FROM'
	{ after(grammarAccess.getFromAndWhereClausesAccess().getFROMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group__1__Impl
	rule__FromAndWhereClauses__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getTableAssignment_1()); }
	(rule__FromAndWhereClauses__TableAssignment_1)
	{ after(grammarAccess.getFromAndWhereClausesAccess().getTableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getGroup_2()); }
	(rule__FromAndWhereClauses__Group_2__0)?
	{ after(grammarAccess.getFromAndWhereClausesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FromAndWhereClauses__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group_2__0__Impl
	rule__FromAndWhereClauses__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getWHEREKeyword_2_0()); }
	'WHERE'
	{ after(grammarAccess.getFromAndWhereClausesAccess().getWHEREKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group_2__1__Impl
	rule__FromAndWhereClauses__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getZAssignment_2_1()); }
	(rule__FromAndWhereClauses__ZAssignment_2_1)
	{ after(grammarAccess.getFromAndWhereClausesAccess().getZAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getGroup_2_2()); }
	(rule__FromAndWhereClauses__Group_2_2__0)*
	{ after(grammarAccess.getFromAndWhereClausesAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FromAndWhereClauses__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group_2_2__0__Impl
	rule__FromAndWhereClauses__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getAlternatives_2_2_0()); }
	(rule__FromAndWhereClauses__Alternatives_2_2_0)
	{ after(grammarAccess.getFromAndWhereClausesAccess().getAlternatives_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FromAndWhereClauses__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFromAndWhereClausesAccess().getZAssignment_2_2_1()); }
	(rule__FromAndWhereClauses__ZAssignment_2_2_1)
	{ after(grammarAccess.getFromAndWhereClausesAccess().getZAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhereDec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereDec__Group__0__Impl
	rule__WhereDec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereDecAccess().getColumnAssignment_0()); }
	(rule__WhereDec__ColumnAssignment_0)
	{ after(grammarAccess.getWhereDecAccess().getColumnAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereDec__Group__1__Impl
	rule__WhereDec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereDecAccess().getAlternatives_1()); }
	(rule__WhereDec__Alternatives_1)
	{ after(grammarAccess.getWhereDecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereDec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereDecAccess().getAlternatives_2()); }
	(rule__WhereDec__Alternatives_2)
	{ after(grammarAccess.getWhereDecAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhereDec__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereDec__Group_2_0__0__Impl
	rule__WhereDec__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereDecAccess().getNumberSignKeyword_2_0_0()); }
	'#'
	{ after(grammarAccess.getWhereDecAccess().getNumberSignKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereDec__Group_2_0__1__Impl
	rule__WhereDec__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereDecAccess().getNameAssignment_2_0_1()); }
	(rule__WhereDec__NameAssignment_2_0_1)
	{ after(grammarAccess.getWhereDecAccess().getNameAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereDec__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereDecAccess().getNumberSignKeyword_2_0_2()); }
	'#'
	{ after(grammarAccess.getWhereDecAccess().getNumberSignKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DatabaseDeclarationStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatabaseDeclarationStatement__Group__0__Impl
	rule__DatabaseDeclarationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseDeclarationStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatabaseDeclarationStatementAccess().getCREATEKeyword_0()); }
	'CREATE'
	{ after(grammarAccess.getDatabaseDeclarationStatementAccess().getCREATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseDeclarationStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatabaseDeclarationStatement__Group__1__Impl
	rule__DatabaseDeclarationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseDeclarationStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatabaseDeclarationStatementAccess().getDATABASEKeyword_1()); }
	'DATABASE'
	{ after(grammarAccess.getDatabaseDeclarationStatementAccess().getDATABASEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseDeclarationStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DatabaseDeclarationStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseDeclarationStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatabaseDeclarationStatementAccess().getNameAssignment_2()); }
	(rule__DatabaseDeclarationStatement__NameAssignment_2)
	{ after(grammarAccess.getDatabaseDeclarationStatementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group__0__Impl
	rule__TableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getCREATEKeyword_0()); }
	'CREATE'
	{ after(grammarAccess.getTableDeclarationAccess().getCREATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group__1__Impl
	rule__TableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getTABLEKeyword_1()); }
	'TABLE'
	{ after(grammarAccess.getTableDeclarationAccess().getTABLEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group__2__Impl
	rule__TableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getTableAssignment_2()); }
	(rule__TableDeclaration__TableAssignment_2)
	{ after(grammarAccess.getTableDeclarationAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group__3__Impl
	rule__TableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getTableDeclarationAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group__4__Impl
	rule__TableDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesAssignment_4()); }
		(rule__TableDeclaration__AttributesAssignment_4)
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesAssignment_4()); }
		(rule__TableDeclaration__AttributesAssignment_4)*
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group__5__Impl
	rule__TableDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getGroup_5()); }
	(rule__TableDeclaration__Group_5__0)*
	{ after(grammarAccess.getTableDeclarationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getTableDeclarationAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group_5__0__Impl
	rule__TableDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getTableDeclarationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableDeclarationAccess().getAttributesAssignment_5_1()); }
	(rule__TableDeclaration__AttributesAssignment_5_1)
	{ after(grammarAccess.getTableDeclarationAccess().getAttributesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnDeclaration__Group__0__Impl
	rule__ColumnDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDeclarationAccess().getNameAssignment_0()); }
	(rule__ColumnDeclaration__NameAssignment_0)
	{ after(grammarAccess.getColumnDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnDeclaration__Group__1__Impl
	rule__ColumnDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDeclarationAccess().getTypeAssignment_1()); }
	(rule__ColumnDeclaration__TypeAssignment_1)
	{ after(grammarAccess.getColumnDeclarationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDeclarationAccess().getNotNullAssignment_2()); }
	(rule__ColumnDeclaration__NotNullAssignment_2)?
	{ after(grammarAccess.getColumnDeclarationAccess().getNotNullAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKey__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__0__Impl
	rule__PrimaryKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getPRIMARYKeyword_0()); }
	'PRIMARY'
	{ after(grammarAccess.getPrimaryKeyAccess().getPRIMARYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__1__Impl
	rule__PrimaryKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getKEYKeyword_1()); }
	'KEY'
	{ after(grammarAccess.getPrimaryKeyAccess().getKEYKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__2__Impl
	rule__PrimaryKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getPrimaryKeyAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__3__Impl
	rule__PrimaryKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getColumnAsPKAssignment_3()); }
	(rule__PrimaryKey__ColumnAsPKAssignment_3)
	{ after(grammarAccess.getPrimaryKeyAccess().getColumnAsPKAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__4__Impl
	rule__PrimaryKey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getGroup_4()); }
	(rule__PrimaryKey__Group_4__0)*
	{ after(grammarAccess.getPrimaryKeyAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getPrimaryKeyAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryKey__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group_4__0__Impl
	rule__PrimaryKey__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getPrimaryKeyAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryKey__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryKeyAccess().getColumnAsPKAssignment_4_1()); }
	(rule__PrimaryKey__ColumnAsPKAssignment_4_1)
	{ after(grammarAccess.getPrimaryKeyAccess().getColumnAsPKAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__0__Impl
	rule__ForeignKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getFOREIGNKeyword_0()); }
	'FOREIGN'
	{ after(grammarAccess.getForeignKeyAccess().getFOREIGNKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__1__Impl
	rule__ForeignKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getKEYKeyword_1()); }
	'KEY'
	{ after(grammarAccess.getForeignKeyAccess().getKEYKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__2__Impl
	rule__ForeignKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getForeignKeyAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__3__Impl
	rule__ForeignKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getColumnAsFKAssignment_3()); }
	(rule__ForeignKey__ColumnAsFKAssignment_3)
	{ after(grammarAccess.getForeignKeyAccess().getColumnAsFKAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__4__Impl
	rule__ForeignKey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getGroup_4()); }
	(rule__ForeignKey__Group_4__0)*
	{ after(grammarAccess.getForeignKeyAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__5__Impl
	rule__ForeignKey__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getForeignKeyAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__6__Impl
	rule__ForeignKey__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getREFERENCESKeyword_6()); }
	'REFERENCES'
	{ after(grammarAccess.getForeignKeyAccess().getREFERENCESKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__7__Impl
	rule__ForeignKey__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getForeignTableAssignment_7()); }
	(rule__ForeignKey__ForeignTableAssignment_7)
	{ after(grammarAccess.getForeignKeyAccess().getForeignTableAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__8__Impl
	rule__ForeignKey__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getLeftParenthesisKeyword_8()); }
	'('
	{ after(grammarAccess.getForeignKeyAccess().getLeftParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__9__Impl
	rule__ForeignKey__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getForeignColumnsAssignment_9()); }
	(rule__ForeignKey__ForeignColumnsAssignment_9)
	{ after(grammarAccess.getForeignKeyAccess().getForeignColumnsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__10__Impl
	rule__ForeignKey__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getGroup_10()); }
	(rule__ForeignKey__Group_10__0)*
	{ after(grammarAccess.getForeignKeyAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getRightParenthesisKeyword_11()); }
	')'
	{ after(grammarAccess.getForeignKeyAccess().getRightParenthesisKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group_4__0__Impl
	rule__ForeignKey__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getForeignKeyAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getColumnAsFKAssignment_4_1()); }
	(rule__ForeignKey__ColumnAsFKAssignment_4_1)
	{ after(grammarAccess.getForeignKeyAccess().getColumnAsFKAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForeignKey__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group_10__0__Impl
	rule__ForeignKey__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getCommaKeyword_10_0()); }
	','
	{ after(grammarAccess.getForeignKeyAccess().getCommaKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForeignKey__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeignKeyAccess().getForeignColumnsAssignment_10_1()); }
	(rule__ForeignKey__ForeignColumnsAssignment_10_1)
	{ after(grammarAccess.getForeignKeyAccess().getForeignColumnsAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropTableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropTableStatement__Group__0__Impl
	rule__DropTableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropTableStatementAccess().getDROPKeyword_0()); }
	'DROP'
	{ after(grammarAccess.getDropTableStatementAccess().getDROPKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropTableStatement__Group__1__Impl
	rule__DropTableStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropTableStatementAccess().getTABLEKeyword_1()); }
	'TABLE'
	{ after(grammarAccess.getDropTableStatementAccess().getTABLEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropTableStatement__Group__2__Impl
	rule__DropTableStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropTableStatementAccess().getTableAssignment_2()); }
	(rule__DropTableStatement__TableAssignment_2)
	{ after(grammarAccess.getDropTableStatementAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropTableStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropTableStatementAccess().getGroup_3()); }
	(rule__DropTableStatement__Group_3__0)*
	{ after(grammarAccess.getDropTableStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DropTableStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropTableStatement__Group_3__0__Impl
	rule__DropTableStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropTableStatementAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getDropTableStatementAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DropTableStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropTableStatementAccess().getTableAssignment_3_1()); }
	(rule__DropTableStatement__TableAssignment_3_1)
	{ after(grammarAccess.getDropTableStatementAccess().getTableAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TruncateTableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TruncateTableStatement__Group__0__Impl
	rule__TruncateTableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTruncateTableStatementAccess().getTRUNCATEKeyword_0()); }
	'TRUNCATE'
	{ after(grammarAccess.getTruncateTableStatementAccess().getTRUNCATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TruncateTableStatement__Group__1__Impl
	rule__TruncateTableStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTruncateTableStatementAccess().getTABLEKeyword_1()); }
	'TABLE'
	{ after(grammarAccess.getTruncateTableStatementAccess().getTABLEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TruncateTableStatement__Group__2__Impl
	rule__TruncateTableStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTruncateTableStatementAccess().getTableAssignment_2()); }
	(rule__TruncateTableStatement__TableAssignment_2)
	{ after(grammarAccess.getTruncateTableStatementAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TruncateTableStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTruncateTableStatementAccess().getGroup_3()); }
	(rule__TruncateTableStatement__Group_3__0)*
	{ after(grammarAccess.getTruncateTableStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TruncateTableStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TruncateTableStatement__Group_3__0__Impl
	rule__TruncateTableStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTruncateTableStatementAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTruncateTableStatementAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TruncateTableStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTruncateTableStatementAccess().getTableAssignment_3_1()); }
	(rule__TruncateTableStatement__TableAssignment_3_1)
	{ after(grammarAccess.getTruncateTableStatementAccess().getTableAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteTableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteTableStatement__Group__0__Impl
	rule__DeleteTableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteTableStatementAccess().getDELETEKeyword_0()); }
	'DELETE'
	{ after(grammarAccess.getDeleteTableStatementAccess().getDELETEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteTableStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteTableStatementAccess().getXAssignment_1()); }
	(rule__DeleteTableStatement__XAssignment_1)
	{ after(grammarAccess.getDeleteTableStatementAccess().getXAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group__0__Impl
	rule__UpdateTableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getUPDATEKeyword_0()); }
	'UPDATE'
	{ after(grammarAccess.getUpdateTableStatementAccess().getUPDATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group__1__Impl
	rule__UpdateTableStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getTableAssignment_1()); }
	(rule__UpdateTableStatement__TableAssignment_1)
	{ after(grammarAccess.getUpdateTableStatementAccess().getTableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group__2__Impl
	rule__UpdateTableStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getSETKeyword_2()); }
	'SET'
	{ after(grammarAccess.getUpdateTableStatementAccess().getSETKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group__3__Impl
	rule__UpdateTableStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getScAssignment_3()); }
	(rule__UpdateTableStatement__ScAssignment_3)
	{ after(grammarAccess.getUpdateTableStatementAccess().getScAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group__4__Impl
	rule__UpdateTableStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getGroup_4()); }
	(rule__UpdateTableStatement__Group_4__0)*
	{ after(grammarAccess.getUpdateTableStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getGroup_5()); }
	(rule__UpdateTableStatement__Group_5__0)?
	{ after(grammarAccess.getUpdateTableStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTableStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group_4__0__Impl
	rule__UpdateTableStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getUpdateTableStatementAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getScAssignment_4_1()); }
	(rule__UpdateTableStatement__ScAssignment_4_1)
	{ after(grammarAccess.getUpdateTableStatementAccess().getScAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTableStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group_5__0__Impl
	rule__UpdateTableStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getWHEREKeyword_5_0()); }
	'WHERE'
	{ after(grammarAccess.getUpdateTableStatementAccess().getWHEREKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group_5__1__Impl
	rule__UpdateTableStatement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getZAssignment_5_1()); }
	(rule__UpdateTableStatement__ZAssignment_5_1)
	{ after(grammarAccess.getUpdateTableStatementAccess().getZAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getGroup_5_2()); }
	(rule__UpdateTableStatement__Group_5_2__0)*
	{ after(grammarAccess.getUpdateTableStatementAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateTableStatement__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group_5_2__0__Impl
	rule__UpdateTableStatement__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getAlternatives_5_2_0()); }
	(rule__UpdateTableStatement__Alternatives_5_2_0)
	{ after(grammarAccess.getUpdateTableStatementAccess().getAlternatives_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateTableStatement__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateTableStatementAccess().getZAssignment_5_2_1()); }
	(rule__UpdateTableStatement__ZAssignment_5_2_1)
	{ after(grammarAccess.getUpdateTableStatementAccess().getZAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group__0__Impl
	rule__SetClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getColumnAssignment_0()); }
	(rule__SetClause__ColumnAssignment_0)
	{ after(grammarAccess.getSetClauseAccess().getColumnAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group__1__Impl
	rule__SetClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSetClauseAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getAlternatives_2()); }
	(rule__SetClause__Alternatives_2)
	{ after(grammarAccess.getSetClauseAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetClause__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group_2_0__0__Impl
	rule__SetClause__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getNumberSignKeyword_2_0_0()); }
	'#'
	{ after(grammarAccess.getSetClauseAccess().getNumberSignKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group_2_0__1__Impl
	rule__SetClause__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getNameAssignment_2_0_1()); }
	(rule__SetClause__NameAssignment_2_0_1)
	{ after(grammarAccess.getSetClauseAccess().getNameAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetClause__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetClauseAccess().getNumberSignKeyword_2_0_2()); }
	'#'
	{ after(grammarAccess.getSetClauseAccess().getNumberSignKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlterTableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterTableStatement__Group__0__Impl
	rule__AlterTableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterTableStatementAccess().getALTERKeyword_0()); }
	'ALTER'
	{ after(grammarAccess.getAlterTableStatementAccess().getALTERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterTableStatement__Group__1__Impl
	rule__AlterTableStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterTableStatementAccess().getTABLEKeyword_1()); }
	'TABLE'
	{ after(grammarAccess.getAlterTableStatementAccess().getTABLEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterTableStatement__Group__2__Impl
	rule__AlterTableStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterTableStatementAccess().getTableAssignment_2()); }
	(rule__AlterTableStatement__TableAssignment_2)
	{ after(grammarAccess.getAlterTableStatementAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterTableStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAssignment_3()); }
	(rule__AlterTableStatement__AddDropUpdateAssignment_3)
	{ after(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlterDropStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterDropStatement__Group__0__Impl
	rule__AlterDropStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterDropStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterDropStatementAccess().getDROPKeyword_0()); }
	'DROP'
	{ after(grammarAccess.getAlterDropStatementAccess().getDROPKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterDropStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterDropStatement__Group__1__Impl
	rule__AlterDropStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterDropStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterDropStatementAccess().getCOLUMNKeyword_1()); }
	'COLUMN'
	{ after(grammarAccess.getAlterDropStatementAccess().getCOLUMNKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterDropStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterDropStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterDropStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterDropStatementAccess().getColumnAssignment_2()); }
	(rule__AlterDropStatement__ColumnAssignment_2)
	{ after(grammarAccess.getAlterDropStatementAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlterAddStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterAddStatement__Group__0__Impl
	rule__AlterAddStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterAddStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAddStatementAccess().getADDKeyword_0()); }
	'ADD'
	{ after(grammarAccess.getAlterAddStatementAccess().getADDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterAddStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterAddStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterAddStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterAddStatementAccess().getColumnAssignment_1()); }
	(rule__AlterAddStatement__ColumnAssignment_1)
	{ after(grammarAccess.getAlterAddStatementAccess().getColumnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlterUpdateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterUpdateStatement__Group__0__Impl
	rule__AlterUpdateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterUpdateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterUpdateStatementAccess().getALTERKeyword_0()); }
	'ALTER'
	{ after(grammarAccess.getAlterUpdateStatementAccess().getALTERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterUpdateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterUpdateStatement__Group__1__Impl
	rule__AlterUpdateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterUpdateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterUpdateStatementAccess().getCOLUMNKeyword_1()); }
	'COLUMN'
	{ after(grammarAccess.getAlterUpdateStatementAccess().getCOLUMNKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterUpdateStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlterUpdateStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterUpdateStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlterUpdateStatementAccess().getColumnAssignment_2()); }
	(rule__AlterUpdateStatement__ColumnAssignment_2)
	{ after(grammarAccess.getAlterUpdateStatementAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationStatement__Group__0__Impl
	rule__VariableDeclarationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationStatementAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableDeclarationStatementAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationStatement__Group__1__Impl
	rule__VariableDeclarationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationStatementAccess().getNameAssignment_1()); }
	(rule__VariableDeclarationStatement__NameAssignment_1)
	{ after(grammarAccess.getVariableDeclarationStatementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationStatement__Group__2__Impl
	rule__VariableDeclarationStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationStatementAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableDeclarationStatementAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationStatementAccess().getValueAssignment_3()); }
	(rule__VariableDeclarationStatement__ValueAssignment_3)
	{ after(grammarAccess.getVariableDeclarationStatementAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__0__Impl
	rule__REAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
	(RULE_INT)?
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__1__Impl
	rule__REAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CountFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountFunction__Group__0__Impl
	rule__CountFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFunctionAccess().getSELECTKeyword_0()); }
	'SELECT'
	{ after(grammarAccess.getCountFunctionAccess().getSELECTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountFunction__Group__1__Impl
	rule__CountFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFunctionAccess().getCOUNTKeyword_1()); }
	'COUNT'
	{ after(grammarAccess.getCountFunctionAccess().getCOUNTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountFunction__Group__2__Impl
	rule__CountFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCountFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountFunction__Group__3__Impl
	rule__CountFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFunctionAccess().getColumnAssignment_3()); }
	(rule__CountFunction__ColumnAssignment_3)
	{ after(grammarAccess.getCountFunctionAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountFunction__Group__4__Impl
	rule__CountFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCountFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountFunctionAccess().getXAssignment_5()); }
	(rule__CountFunction__XAssignment_5)
	{ after(grammarAccess.getCountFunctionAccess().getXAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AvgFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AvgFunction__Group__0__Impl
	rule__AvgFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvgFunctionAccess().getSELECTKeyword_0()); }
	'SELECT'
	{ after(grammarAccess.getAvgFunctionAccess().getSELECTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AvgFunction__Group__1__Impl
	rule__AvgFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvgFunctionAccess().getAVGKeyword_1()); }
	'AVG'
	{ after(grammarAccess.getAvgFunctionAccess().getAVGKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AvgFunction__Group__2__Impl
	rule__AvgFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvgFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAvgFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AvgFunction__Group__3__Impl
	rule__AvgFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvgFunctionAccess().getColumnAssignment_3()); }
	(rule__AvgFunction__ColumnAssignment_3)
	{ after(grammarAccess.getAvgFunctionAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AvgFunction__Group__4__Impl
	rule__AvgFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvgFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAvgFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AvgFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAvgFunctionAccess().getXAssignment_5()); }
	(rule__AvgFunction__XAssignment_5)
	{ after(grammarAccess.getAvgFunctionAccess().getXAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__0__Impl
	rule__SumFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getSELECTKeyword_0()); }
	'SELECT'
	{ after(grammarAccess.getSumFunctionAccess().getSELECTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__1__Impl
	rule__SumFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getSUMKeyword_1()); }
	'SUM'
	{ after(grammarAccess.getSumFunctionAccess().getSUMKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__2__Impl
	rule__SumFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getSumFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__3__Impl
	rule__SumFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getColumnAssignment_3()); }
	(rule__SumFunction__ColumnAssignment_3)
	{ after(grammarAccess.getSumFunctionAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__4__Impl
	rule__SumFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getSumFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getXAssignment_5()); }
	(rule__SumFunction__XAssignment_5)
	{ after(grammarAccess.getSumFunctionAccess().getXAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinFunction__Group__0__Impl
	rule__MinFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinFunctionAccess().getSELECTKeyword_0()); }
	'SELECT'
	{ after(grammarAccess.getMinFunctionAccess().getSELECTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinFunction__Group__1__Impl
	rule__MinFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinFunctionAccess().getMINKeyword_1()); }
	'MIN'
	{ after(grammarAccess.getMinFunctionAccess().getMINKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinFunction__Group__2__Impl
	rule__MinFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMinFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinFunction__Group__3__Impl
	rule__MinFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinFunctionAccess().getColumnAssignment_3()); }
	(rule__MinFunction__ColumnAssignment_3)
	{ after(grammarAccess.getMinFunctionAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinFunction__Group__4__Impl
	rule__MinFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMinFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinFunctionAccess().getXAssignment_5()); }
	(rule__MinFunction__XAssignment_5)
	{ after(grammarAccess.getMinFunctionAccess().getXAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxFunction__Group__0__Impl
	rule__MaxFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxFunctionAccess().getSELECTKeyword_0()); }
	'SELECT'
	{ after(grammarAccess.getMaxFunctionAccess().getSELECTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxFunction__Group__1__Impl
	rule__MaxFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxFunctionAccess().getMAXKeyword_1()); }
	'MAX'
	{ after(grammarAccess.getMaxFunctionAccess().getMAXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxFunction__Group__2__Impl
	rule__MaxFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMaxFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxFunction__Group__3__Impl
	rule__MaxFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxFunctionAccess().getColumnAssignment_3()); }
	(rule__MaxFunction__ColumnAssignment_3)
	{ after(grammarAccess.getMaxFunctionAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxFunction__Group__4__Impl
	rule__MaxFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMaxFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxFunctionAccess().getXAssignment_5()); }
	(rule__MaxFunction__XAssignment_5)
	{ after(grammarAccess.getMaxFunctionAccess().getXAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__ColumnAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getColumnCDCrossReference_1_1_0_0()); }
		(
			{ before(grammarAccess.getSelectStatementAccess().getColumnCDIDTerminalRuleCall_1_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSelectStatementAccess().getColumnCDIDTerminalRuleCall_1_1_0_0_1()); }
		)
		{ after(grammarAccess.getSelectStatementAccess().getColumnCDCrossReference_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__ColumnAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getColumnCDCrossReference_1_1_1_1_0()); }
		(
			{ before(grammarAccess.getSelectStatementAccess().getColumnCDIDTerminalRuleCall_1_1_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSelectStatementAccess().getColumnCDIDTerminalRuleCall_1_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getSelectStatementAccess().getColumnCDCrossReference_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getXFromAndWhereClausesParserRuleCall_2_0()); }
		ruleFromAndWhereClauses
		{ after(grammarAccess.getSelectStatementAccess().getXFromAndWhereClausesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__TableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAndWhereClausesAccess().getTableTableNameCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFromAndWhereClausesAccess().getTableTableNameIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFromAndWhereClausesAccess().getTableTableNameIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFromAndWhereClausesAccess().getTableTableNameCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__ZAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAndWhereClausesAccess().getZWhereDecParserRuleCall_2_1_0()); }
		ruleWhereDec
		{ after(grammarAccess.getFromAndWhereClausesAccess().getZWhereDecParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FromAndWhereClauses__ZAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFromAndWhereClausesAccess().getZWhereDecParserRuleCall_2_2_1_0()); }
		ruleWhereDec
		{ after(grammarAccess.getFromAndWhereClausesAccess().getZWhereDecParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__ColumnAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereDecAccess().getColumnCDCrossReference_0_0()); }
		(
			{ before(grammarAccess.getWhereDecAccess().getColumnCDIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWhereDecAccess().getColumnCDIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getWhereDecAccess().getColumnCDCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__NameAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereDecAccess().getNameIDTerminalRuleCall_2_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWhereDecAccess().getNameIDTerminalRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__ColumnAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereDecAccess().getColumnCDCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getWhereDecAccess().getColumnCDIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWhereDecAccess().getColumnCDIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getWhereDecAccess().getColumnCDCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereDec__ValAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereDecAccess().getValINTTerminalRuleCall_2_2_0()); }
		RULE_INT
		{ after(grammarAccess.getWhereDecAccess().getValINTTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DatabaseDeclarationStatement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatabaseDeclarationStatementAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDatabaseDeclarationStatementAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__TablesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateTableStatementAccess().getTablesTableDeclarationParserRuleCall_0()); }
		ruleTableDeclaration
		{ after(grammarAccess.getCreateTableStatementAccess().getTablesTableDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableDeclarationAccess().getTableTableNameParserRuleCall_2_0()); }
		ruletableName
		{ after(grammarAccess.getTableDeclarationAccess().getTableTableNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__AttributesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesAlternatives_4_0()); }
		(rule__TableDeclaration__AttributesAlternatives_4_0)
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableDeclaration__AttributesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableDeclarationAccess().getAttributesAlternatives_5_1_0()); }
		(rule__TableDeclaration__AttributesAlternatives_5_1_0)
		{ after(grammarAccess.getTableDeclarationAccess().getAttributesAlternatives_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableNameAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getTableNameAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getColumnDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnDeclarationAccess().getTypeDataStructureTypeEnumRuleCall_1_0()); }
		ruleDataStructureType
		{ after(grammarAccess.getColumnDeclarationAccess().getTypeDataStructureTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnDeclaration__NotNullAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnDeclarationAccess().getNotNullNOTNULLKeyword_2_0()); }
		(
			{ before(grammarAccess.getColumnDeclarationAccess().getNotNullNOTNULLKeyword_2_0()); }
			'NOT NULL'
			{ after(grammarAccess.getColumnDeclarationAccess().getNotNullNOTNULLKeyword_2_0()); }
		)
		{ after(grammarAccess.getColumnDeclarationAccess().getNotNullNOTNULLKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__ColumnAsPKAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDCrossReference_3_0()); }
		(
			{ before(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryKey__ColumnAsPKAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getPrimaryKeyAccess().getColumnAsPKCDCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ColumnAsFKAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getColumnAsFKCDCrossReference_3_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getColumnAsFKCDIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getColumnAsFKCDIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getColumnAsFKCDCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ColumnAsFKAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getColumnAsFKCDCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getColumnAsFKCDIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getColumnAsFKCDIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getColumnAsFKCDCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ForeignTableAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getForeignTableTableDeclarationCrossReference_7_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getForeignTableTableDeclarationIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getForeignTableTableDeclarationIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getForeignTableTableDeclarationCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ForeignColumnsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getForeignColumnsCDCrossReference_9_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getForeignColumnsCDIDTerminalRuleCall_9_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getForeignColumnsCDIDTerminalRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getForeignColumnsCDCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeignKey__ForeignColumnsAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeignKeyAccess().getForeignColumnsCDCrossReference_10_1_0()); }
		(
			{ before(grammarAccess.getForeignKeyAccess().getForeignColumnsCDIDTerminalRuleCall_10_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForeignKeyAccess().getForeignColumnsCDIDTerminalRuleCall_10_1_0_1()); }
		)
		{ after(grammarAccess.getForeignKeyAccess().getForeignColumnsCDCrossReference_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropTableStatementAccess().getTableTableNameCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDropTableStatementAccess().getTableTableNameIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDropTableStatementAccess().getTableTableNameIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDropTableStatementAccess().getTableTableNameCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DropTableStatement__TableAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropTableStatementAccess().getTableTableNameCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getDropTableStatementAccess().getTableTableNameIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDropTableStatementAccess().getTableTableNameIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getDropTableStatementAccess().getTableTableNameCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTruncateTableStatementAccess().getTableTableNameCrossReference_2_0()); }
		(
			{ before(grammarAccess.getTruncateTableStatementAccess().getTableTableNameIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTruncateTableStatementAccess().getTableTableNameIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getTruncateTableStatementAccess().getTableTableNameCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TruncateTableStatement__TableAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTruncateTableStatementAccess().getTableTableNameCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getTruncateTableStatementAccess().getTableTableNameIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTruncateTableStatementAccess().getTableTableNameIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getTruncateTableStatementAccess().getTableTableNameCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__XAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteTableStatementAccess().getXFromAndWhereClausesParserRuleCall_1_0()); }
		ruleFromAndWhereClauses
		{ after(grammarAccess.getDeleteTableStatementAccess().getXFromAndWhereClausesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__TableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getTableTableNameCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUpdateTableStatementAccess().getTableTableNameIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUpdateTableStatementAccess().getTableTableNameIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUpdateTableStatementAccess().getTableTableNameCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__ScAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getScSetClauseParserRuleCall_3_0()); }
		ruleSetClause
		{ after(grammarAccess.getUpdateTableStatementAccess().getScSetClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__ScAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getScSetClauseParserRuleCall_4_1_0()); }
		ruleSetClause
		{ after(grammarAccess.getUpdateTableStatementAccess().getScSetClauseParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__ZAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getZWhereDecParserRuleCall_5_1_0()); }
		ruleWhereDec
		{ after(grammarAccess.getUpdateTableStatementAccess().getZWhereDecParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateTableStatement__ZAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateTableStatementAccess().getZWhereDecParserRuleCall_5_2_1_0()); }
		ruleWhereDec
		{ after(grammarAccess.getUpdateTableStatementAccess().getZWhereDecParserRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__ColumnAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetClauseAccess().getColumnCDCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSetClauseAccess().getColumnCDIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSetClauseAccess().getColumnCDIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSetClauseAccess().getColumnCDCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__NameAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetClauseAccess().getNameIDTerminalRuleCall_2_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSetClauseAccess().getNameIDTerminalRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetClause__ValAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetClauseAccess().getValINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSetClauseAccess().getValINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterTableStatementAccess().getTableTableNameCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAlterTableStatementAccess().getTableTableNameIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAlterTableStatementAccess().getTableTableNameIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAlterTableStatementAccess().getTableTableNameCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterTableStatement__AddDropUpdateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlternatives_3_0()); }
		(rule__AlterTableStatement__AddDropUpdateAlternatives_3_0)
		{ after(grammarAccess.getAlterTableStatementAccess().getAddDropUpdateAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterDropStatement__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterDropStatementAccess().getColumnCDCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAlterDropStatementAccess().getColumnCDIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAlterDropStatementAccess().getColumnCDIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAlterDropStatementAccess().getColumnCDCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterAddStatement__ColumnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterAddStatementAccess().getColumnCDCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAlterAddStatementAccess().getColumnCDIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAlterAddStatementAccess().getColumnCDIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAlterAddStatementAccess().getColumnCDCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlterUpdateStatement__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlterUpdateStatementAccess().getColumnCDCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAlterUpdateStatementAccess().getColumnCDIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAlterUpdateStatementAccess().getColumnCDIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAlterUpdateStatementAccess().getColumnCDCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationStatementAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationStatementAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationStatement__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationStatementAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getVariableDeclarationStatementAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountFunctionAccess().getColumnCDCrossReference_3_0()); }
		(
			{ before(grammarAccess.getCountFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCountFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getCountFunctionAccess().getColumnCDCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountFunction__XAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
		ruleFromAndWhereClauses
		{ after(grammarAccess.getCountFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAvgFunctionAccess().getColumnCDCrossReference_3_0()); }
		(
			{ before(grammarAccess.getAvgFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAvgFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getAvgFunctionAccess().getColumnCDCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AvgFunction__XAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAvgFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
		ruleFromAndWhereClauses
		{ after(grammarAccess.getAvgFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumFunctionAccess().getColumnCDCrossReference_3_0()); }
		(
			{ before(grammarAccess.getSumFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSumFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getSumFunctionAccess().getColumnCDCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__XAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
		ruleFromAndWhereClauses
		{ after(grammarAccess.getSumFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinFunctionAccess().getColumnCDCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMinFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMinFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMinFunctionAccess().getColumnCDCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinFunction__XAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
		ruleFromAndWhereClauses
		{ after(grammarAccess.getMinFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxFunctionAccess().getColumnCDCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMaxFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMaxFunctionAccess().getColumnCDIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMaxFunctionAccess().getColumnCDCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxFunction__XAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
		ruleFromAndWhereClauses
		{ after(grammarAccess.getMaxFunctionAccess().getXFromAndWhereClausesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
